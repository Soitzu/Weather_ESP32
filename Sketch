#include <LiquidCrystal_I2C.h>
#include "DHT.h"
#include <PubSubClient.h>
#include <WiFi.h>

#define DHTPIN 2
#define DHTTYPE DHT11
// set the LCD number of columns and rows
int lcdColumns = 16;
int lcdRows = 2;
  
const char* ssid = "";
const char* password = "";
const char* mqtt_server = "192.168.71.116";
const char* mqtt_user = "nikita";
const char* mqtt_password = "";


WiFiClient espClient;
PubSubClient client(espClient);

// set LCD address, number of columns and rows
// if you don't know your display address, run an I2C scanner sketch
LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows);  
DHT dht(DHTPIN, DHTTYPE);


void setup(){
  Serial.begin(9600);

  // WiFi 
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected");

  // LCD
  lcd.init();                      
  lcd.backlight();

  // DHT 11
  dht.begin();

  // MQTT
  client.setServer(mqtt_server, 1883);

}

void loop(){
   if (!client.connected()) {
    if (client.connect("ESP32Client", mqtt_user, mqtt_password)) {
      Serial.println("Connected to MQTT broker");
      

    } else {
      Serial.print("Failed to connect, rc=");
      Serial.print(client.state());
      delay(5000);
    }
  }
  
  delay(1000);
  lcd.clear(); 

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }


  lcd.setCursor(0, 0);
  lcd.print(F("Temperature: "));
  lcd.setCursor(0, 1);
  lcd.print(t);
  lcd.print(" C ");
  client.publish("*", String(t).c_str());

  client.loop();
}
